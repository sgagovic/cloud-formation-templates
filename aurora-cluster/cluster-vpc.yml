AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the VPC for creating Aurora cluster

## Parameters
Parameters:
  TemplateName:
    Type: String
    Default: aurora-vpc
    Description: Name used for different elements created.

## Mappings
Mappings:
  NetworkSettings:
    global:
      vpcCidr: 10.0.0.0/16


## Resources
Resources:
  ## The VPC
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value:  !Sub ${TemplateName}-vpc

  ## Create an IGW & attach it to the VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway

  ## Create 2 public subnets in two different availability zones
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: "eu-west-1"
      CidrBlock: 10.0.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-Public1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: "eu-west-2"
      CidrBlock: 10.0.20.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-Public2

  ## Create 2 private subnets in two different availability zones
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: "eu-west-1"
      CidrBlock: 10.0.30.0/24
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-Private1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: "eu-west-2"
      CidrBlock: 10.0.40.0/24
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-Private2


    # A NAT Gateway:
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-natgw
  #Specifies an Elastic IP (EIP) address
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  #Specifies a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-public-rtb

  #Specifies a route in a route table.
  ## Public route table has direct routing to IGW:
  RouteNATGateway:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  # Attach the public subnets to public route tables,
  # and attach the private subnets to private route tables:
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

## Outputs
Outputs:
  MainVPC:
    Description: Main VPC for Aurora Cluster
    Value: !Ref MainVPC
    Export:
      Name: !Sub "${AWS::StackName}-MainVPC"
  PublicSubnetCidrA:
    Description: PublicSubnet1 CIDR
    Value: !Select [ 0, !Cidr [ !GetAtt MainVPC.CidrBlock, 4, 8 ]]
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet1Cidr"
  PublicSubnetCidrB:
    Description: PublicSubnet2 CIDR
    Value: !Select [ 1, !Cidr [ !GetAtt MainVPC.CidrBlock, 4, 8 ]]
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet2Cidr"
  PublicSubnet1:
    Description: PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet1"
  PublicSubnet2:
    Description: PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet2"
  PrivateSubnet1:
    Description: PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet1"
  PrivateSubnet2:
    Description: PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet2"
  PrivateSubnets:
    Description: 'VPCs Subnets private'
    Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'

    
